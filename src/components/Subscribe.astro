---
import Button from './Button.astro';
import siteConfig from '../data/site-config';

const subscribe = siteConfig.subscribe;

const { class: className } = Astro.props;
---

{
    subscribe?.formUrl && (
        <section class:list={['px-8 py-12 flex flex-col items-center border border-dashed border-main text-center sm:px-12 sm:py-16', className]}>
            {subscribe.title && (
                <h2 class:list={['w-full max-w-xl text-2xl leading-tight font-serif font-medium sm:text-4xl', subscribe.text ? 'mb-4' : 'mb-8']}>
                    {subscribe.title}
                </h2>
            )}
            {subscribe.text && <p class="w-full max-w-xl mb-8 text-sm leading-normal">{subscribe.text}</p>}
            <form id="subscribe-form" name="subscribe-form" class="w-full max-w-xl flex flex-col gap-3.5 sm:flex-row">
                <label for="email" class="sr-only">
                    Dirección de Email
                </label>
                <input
                    type="email"
                    name="email"
                    id="email"
                    class="w-full h-9 px-5 py-2 text-sm text-main bg-transparent border border-main rounded-full placeholder:text-main/60 focus:outline-hidden"
                    required=""
                    value=""
                    placeholder="Tu email"
                />
                <Button type="submit" name="subscribe" class="w-full h-9 sm:w-auto">
                    Suscribirse
                </Button>
            </form>
            <div id="subscribe-message" class="mt-4 text-sm hidden" />
        </section>
    )
}

<script>
    document.addEventListener('astro:page-load', () => {
        const form = document.getElementById('subscribe-form') as HTMLFormElement;
        const messageDiv = document.getElementById('subscribe-message') as HTMLDivElement;

        if (form) {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                const formData = new FormData(form);
                const email = formData.get('email') as string;

                if (!email || !email.includes('@')) {
                    showMessage('Por favor ingresa un email válido', 'error');
                    return;
                }

                try {
                    const response = await fetch('/api/subscribe', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ email })
                    });

                    const data = await response.json();

                    if (data.success) {
                        showMessage(data.message, 'success');
                        form.reset();
                    } else {
                        showMessage(data.message, 'error');
                    }
                } catch (error) {
                    showMessage('Error al procesar la suscripción', 'error');
                }
            });
        }

        function showMessage(message: string, type: 'success' | 'error') {
            if (messageDiv) {
                messageDiv.textContent = message;
                messageDiv.className = `mt-4 text-sm ${type === 'success' ? 'text-green-600' : 'text-red-600'}`;
                messageDiv.classList.remove('hidden');

                setTimeout(() => {
                    messageDiv.classList.add('hidden');
                }, 5000);
            }
        }
    });
</script>
